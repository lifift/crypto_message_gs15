"""
A function to create a couple private/public key.

This couple depend of the type of key needed : 
    type 1 : ID key for long terme use
    type 2 : preSigned key 
    type 3 : one time use key 
    type 4 ephemeral key
"""
try :
    import random
    from modular_power import modular_power
except :
    exit()

# p the prime defining our abelian group
p = 4292469091081941787852573722304873042379196201997918874258631027848536688666827404638258423522505378195480739223209688942029116059567909798690586120923435711468396310369223166553370616241775320020540836189417921172571346899975021302225524130824045771697337039920702707588891418679721071314241329538864793408023803304160377255979162158488484079098824519353831063189527593195492499997241834018709545739809430344890081174734932033933935709577259601376896266240781383219600530896764205096055830415184011507805552472203518550846432638892160751530988879981470697076071149504769330957847616005805163638772962268223049985774171568506091708263340533607694656704926954043533527881141287595911660122327533214644131363509231003483764735398762066126129411638696127452747414357618935505276153072550980933417734636289988317302378971100378670646443529015947640530148744362674371132014560246827800011978515504461654824551649458834019416213551

def key_creator( KeyType:int(), p, g ):


    KeySize = 0  # size of the key in bits
    if   KeyType == 1 : KeySize = 2048
    elif KeyType == 2 : KeySize = 512 # need to talk about this one ? always 2048 ?
    elif KeyType == 3 : KeySize = 512 # same
    else              : KeySize = 512 # same

    priv = random.randrange( 2**(KeySize-1), 2**KeySize ) #p is 3072 bit prime so no need to check if our candidate is inferior

    pub  = modular_power( g, priv, p )

    return (priv,pub)

if __name__ == '__main__': 
    (x,y) = key_creator( 1 , p=p, g=2 )
    print ( "clé privé : "+str(x)+ "\nclé publique : "+str(y) )
    #print (int.to_bytes(x, 2048, 'little'))