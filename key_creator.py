"""
A function to create a couple private/public key.

This couple depend of the type of key needed : 
    type 1 : ID key for long terme use
    type 2 : preSigned key 
    type 3 : one time use key 
    type 4 ephemeral key
"""
try :
    import random
    from modular_power import modular_power
except :
    exit()

# p the prime defining our abelian group
p = 42319497670192821545946615252209673109677225028613892412561386782526930920583767194139955881001195614668775056120404415013148090951892954204953909865916795037269938465835747093967448520123816629302706544939395131405659753939183809402981935857266275419317363356979266075303232855495809448782012453565615220666359358597692203498934195533397118957309475530089462348663140647771188572603816330556171310194843968069269597715463407705438237909279601180783489982448491361578170614483778384033872254117814346539879827151387383182980444307667080622689463771297923414369153073665931997870285588226267462998861424143849380040760062189397904328901233915250848860200442291669324552424156186921362931705560674921077997437286080141422507991846514280479735357586258220163014074338615507450563623709715452897143169784539524624496307339027346522137698586918638418412741868881039059232376594450944027944747638311678179270400393304330239805571567

def key_creator( KeyType:int(), p, g ):


    KeySize = 0  # size of the key in bits
    if   KeyType == 1 : KeySize = 2048
    elif KeyType == 2 : KeySize = 512 # need to talk about this one ? always 2048 ?
    elif KeyType == 3 : KeySize = 512 # same
    else              : KeySize = 512 # same

    priv = random.randrange( 2**(KeySize-1), 2**KeySize ) #p is 3072 bit prime so no need to check if our candidate is inferior

    pub  = modular_power( g, priv, p )

    return (priv,pub)

if __name__ == '__main__': 
    (x,y) = key_creator( 1 , p=p, g=2 )
    print ( "clé privé : "+str(x)+ "\nclé publique : "+str(y) )
    #print (int.to_bytes(x, 2048, 'little'))
